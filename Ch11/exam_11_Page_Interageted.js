// 원시 타입(primitive type)과 객체 타입(object/referernce type)
// 원시 타입 / 객체 타입
// 변경 불가능한 값 / 변경 가능한 값
// 변수에 실제 값이 저장 / 변수에 참조 값이 저장
// 원시 값을 가지는 변수를 다른 변수에 할당하면 원본의 원시 값이 복사되어 전달
// 객체를 가르키는 변수를 다른 변수에 할당하면 원본의 참조 값이 복사되어 전달 (참조에 의한 전달 = pass by reference)
// 한 번 생성된 원시 값은 읽기 전용 값으로서 변경할 수 없다. (변경 불가능하다는 것은 변수가 아니라 원시 값 자체에 대한 진술)
// 상수(재할당이 금지된 변수)와 변경 불가능한 값은 동일시 되지 않는다.
const o = {}; // const 키워드를 사용 (재할당이 금지된 변수)
o.a = 1; // 상수에 할당한 원시 값은 변경할 수 없지만 할당한 객체는 변경할 수 있다.
console.log(o); // {a : 1}

// 원시 값은 어떤한 일이 있어도 불변하기에 데이터 신뢰성을 보장한다고 볼 수 있다.
// 원시 값을 재할당시 새로운 메모리 공간을 확보 후 재할당한 값을 저장 후 변수가 참조하던 메모리 공간의 주소를 변경(불변성)
// 때문에 상태 변경을 추적하기 쉽도록 한다고 볼 수 있다.

